_start:
        @ The header takes 192 bytes at 0x0800_0000..x0800_00BF in ROM
        @ But only 0x00..0xC0 is required

        @ ROM entry point (4 bytes)
        @ B  0xC0
        .byte 0x2E, 0x00, 0x00, 0xEA

        @ Nintendo Logo (156 bytes)
        .byte      0x24,0xFF,0xAE,0x51,0x69,0x9A,0xA2,0x21,0x3D,0x84
        .byte      0x82,0x0A,0x84,0xE4,0x09,0xAD,0x11,0x24,0x8B,0x98
        .byte      0xC0,0x81,0x7F,0x21,0xA3,0x52,0xBE,0x19,0x93,0x09
        .byte      0xCE,0x20,0x10,0x46,0x4A,0x4A,0xF8,0x27,0x31,0xEC
        .byte      0x58,0xC7,0xE8,0x33,0x82,0xE3,0xCE,0xBF,0x85,0xF4
        .byte      0xDF,0x94,0xCE,0x4B,0x09,0xC1,0x94,0x56,0x8A,0xC0
        .byte      0x13,0x72,0xA7,0xFC,0x9F,0x84,0x4D,0x73,0xA3,0xCA
        .byte      0x9A,0x61,0x58,0x97,0xA3,0x27,0xFC,0x03,0x98,0x76
        .byte      0x23,0x1D,0xC7,0x61,0x03,0x04,0xAE,0x56,0xBF,0x38
        .byte      0x84,0x00,0x40,0xA7,0x0E,0xFD,0xFF,0x52,0xFE,0x03
        .byte      0x6F,0x95,0x30,0xF1,0x97,0xFB,0xC0,0x85,0x60,0xD6
        .byte      0x80,0x25,0xA9,0x63,0xBE,0x03,0x01,0x4E,0x38,0xE2
        .byte      0xF9,0xA2,0x34,0xFF,0xBB,0x3E,0x03,0x44,0x78,0x00
        .byte      0x90,0xCB,0x88,0x11,0x3A,0x94,0x65,0xC0,0x7C,0x63
        .byte      0x87,0xF0,0x3C,0xAF,0xD6,0x25,0xE4,0x8B,0x38,0x0A
        .byte      0xAC,0x72,0x21,0xD4,0xF8,0x07

        .ascii     "SNEK ADVANCE"  @ Game title (12 bytes)
        .ascii     "SNEK"          @ Game code (4 bytes)
        .ascii     "LR"            @ Maker code (2 bytes)
        .byte      0x96            @ Fixed value (1 byte)
        .byte      0x00            @ Main unit code (1 byte)
        .byte      0x00            @ Device type (1 byte)
        .byte      0,0,0,0,0,0,0   @ Reserved (7 bytes)
        .byte      0x00            @ Software version (1 byte)
        .byte      0x3F            @ Header checksum (1 byte)
        .byte      0,0             @ Reserved (2 bytes)

_setup_sp:
        msr        cpsr, #0b0010010 @ IRQ mode
        ldr        sp, =__sp_irq

        msr        cpsr, #0b0011111 @ System mode
        ldr        sp, =__sp_sys

_setup_irq_handler:
        ldr        r0, =_irq_handler
        mov        r1, #0x03000000
        mov        r2, #0x00008000
        add        r1, r1, r2
        sub        r1, #4
        str        r0, [r1]
        b          _clear_bss

_irq_handler:
        push {r0-r3, lr}
        bl irq_handler
        pop {r0-r3, lr}
        subs pc, lr, #4

_clear_bss:
        mov        r0, #0
        ldr        r1, =_sbss
        ldr        r2, =_ebss

_clear_bss_inner:
        cmp        r1, r2
        bge        _copy_data
        str        r0, [r1], #4
        b          _clear_bss_inner

_copy_data:
        ldr        r0, =_etext
        ldr        r1, =_sdata
        ldr        r2, =_edata

_copy_data_inner:
        cmp        r1, r2
        bge        _main
        ldr        r3, [r0], #4
        str        r3, [r1], #4
        b          _copy_data_inner

_main:
        ldr        r0, =main + 1 @ Switch to thumb mode
        bx         r0
